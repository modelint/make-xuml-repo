metadata
    Title : Action Subsystem / Shlaer-Mellor Metamodel
    Author : Leon Starr
    Document ID : mint.sm-meta.action.td.5
    Version : 0.8.1
    /// Creation date : September 7, 2021
    Modification date : August 14, 2025
    Organization : Model Integration, LLC / www.modelint.com
    Copyright notice > MIT
    Organization logo > mint
domain Metamodel, META
subsystem Action, ACTION 900-924
class Action
attributes
    ID : Action ID {I}
    Activity : Activity Number {I, R900, R904}
    Domain : Domain Name {I, R900, R904}
    Type : Action Type
--
class Activity <import:Activity>
attributes
    Anum {I}
    Domain {I}
--
class Instance Action
attributes
    ID : Action ID {I, R907}
    Activity : Activity Number {I, R907}
    Domain : Domain Name {I, R907}
--
class Computation Action <import:Computation>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Create Action <import:Create Delete>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Delete Action <import:Create Delete>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Flow <import:Flow>
attributes
    ID {I}
    Activity {I}
    Domain {I}
--
class Gate Action <import:Flow>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Flow Dependency
attributes
    From action : Action ID {I, R905}
    To action : Action ID {I, R905}
    Activity : Activity Number {I, R905}
    Domain : Domain Name {I, R905}
    Flow : Flow ID {R906}
--
class Method Call <import:Method Call>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Pass Action <import:Method Call>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Read Action <import:Attribute Access>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Reference Action <import:Reference Action>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Relation Action <import:Relational Action>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Scalar Action <import:Scalar Action>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Select Action <import:Select Action>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Signal Action <import:Signal Action>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Switch Action <import:Conditional Logic>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Traverse Action <import:Navigation>
attributes
    ID {I, R901}
    Activity {I, R901}
    Domain {I, R901}
--
class Wave
attributes
    Number : Wave Number {I, OR903}
    Activity : Activity Number {I, R902}
    Domain : Domain Name {I, R902}
--
class Wave Assignment
attributes
    Action : Action ID {I, R904}
    Activity : Activity Number {I, R904}
    Domain : Domain Name {I, R904}
    Wave : Wave Number {R904}
--
relationships
    R900
    executes in, 1 Activity
    executes, Mc Action
    Action.(Activity, Domain) -> Activity.(Anum, Domain)
--
    R901
    Instance Action +
        Computation Action
        Select Action
        Traverse Action
        Read Action
        Switch Action
        Gate Action
        Scalar Action
        Signal Action
        Create Action
        Delete Action
        Reference Action
        Method Call
        Pass Action
    <subclass>.(ID, Activity, Domain) -> Action.(ID, Activity, Domain)
--
    R902
    independent flows of data are pushed in sequential, Mc Wave
    pushes independent flows of data in, 1 Activity
    Wave.(Activity, Domain) -> Activity.(Anum, Domain)
--
    OR903
    undulates before / undulates after, Wave
    Wave : I
--
    R904
    moves input data to output in, 1c Wave
    pushes input data to output for, M Action
    1 Wave Assignment
    Wave Assignment.(Action, Activity, Domain) -> Action.(ID, Activity, Domain)
    Wave Assignment.(Wave, Activity, Domain) -> Wave.(Number, Activity, Domain)
--
    R905
    produces output for, Mc Action
    requires input from, Mc Action
    1 Flow Dependency
    Flow Dependency.(From action, Activity, Domain) -> Action.(ID, Activity, Domain)
    Flow Dependency.(To action, Activity, Domain) -> Action.(ID, Activity, Domain)
--
    R906
    establishes, Mc Flow Dependency
    is established by, 1 Flow
    Flow Dependency.(Flow, Activity, Domain) -> Flow.(ID, Activity, Domain)
--
    R907
    Action +
        Instance Action
        Relation Action
    <subclass>.(ID, Activity, Domain) -> Action.(ID, Activity, Domain)
--
